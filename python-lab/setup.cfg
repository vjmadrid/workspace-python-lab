# *****************************************
#            _                            
#   ___  ___| |_ _   _ _ __   _ __  _   _ 
#  / __|/ _ \ __| | | | '_ \ | '_ \| | | |
#  \__ \  __/ |_| |_| | |_) || |_) | |_| |
#  |___/\___|\__|\__,_| .__(_) .__/ \__, |
#                     |_|    |_|    |___/ 
#                    
# *****************************************

# Resolve that each of these tools would like to have its own file, usually something like .flake8 or .coveragerc



# **********************************
# 		flake8
# **********************************

# *** flake8 : tool for enforcing code style in the projects ***

[flake8]
exclude =
    .git,
    __pycache__,
    .pytest_cache,
    venv,
    old,
    build,
    dist

ignore =
    # Put Error/Style codes here e.g. H301

max-complexity = 10
max-line-length = 120





# **********************************
# 		pylint
# **********************************

# *** pylint : tool for enforcing code style in the projects ***

[pylint]
persistent=yes
load-plugins=
jobs=1
unsafe-load-any-extension=no
extension-pkg-whitelist=





# **********************************
# 		bandit
# **********************************

# *** bandit : tool for finding common security issues in Python code ***

[bandit]
targets: helloworld





# **********************************
# 		coverage
# **********************************

# *** coverage : tool for measuring code coverage of Python programs ***

[coverage:run]
branch = True
omit =
    */__main__.py
    */tests/*
    */venv*/*

[coverage:report]
exclude_lines =
    pragma: no cover
    if __name__ == .__main__.:

[coverage:html]
directory = reports